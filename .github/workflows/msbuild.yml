name: MSBuild

on:
  push:
    tags:
      - '*'

env:
  # Path to the solution file relative to the root of the project.
  SOLUCTION_FILE_PATH: .

  # Configuration type to build.
  # You can convert this to a build matrix if you need coverage of multiple configuration types.
  # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
  BUILD_CONFIGURATION: Release

permissions:
  contents: write
  discussions: write

jobs:
  build:
    name: Release
    strategy:
      matrix:
        kind: ['windows']
        include:
          - kind: windows
            os: windows-latest
            target: win-x64
    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1.0.2
      with:
        msbuild-architecture: x64

    - name: Restore NuGet packages
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: nuget restore ${{env.SOLUCTION_FILE_PATH}}

    - name: Build
      working-directory: ${{env.GITHUB_WORKSPACE}}
      # Add additional options to the MSBuild command line here (like platform or verbosity level).
      # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
      run: msbuild /m /p:AllowUnsafeBlocks=true /p:Configuration=${{env.BUILD_CONFIGURATION}} /verbosity:minimal /p:NoWarn=1591 ${{env.SOLUCTION_FILE_PATH}}
      
    - name: Upload Build as Artifact
      uses: actions/upload-artifact@v3
      with:
        name: XSharp_Release
        path: XSharp\bin\Release
        
    - name: Pack Build
      run: |
        tag=$(git describe --tags --abbrev=0)
        release_name="XSharp-$tag-${{ matrix.target }}"
        7z a ${{ release_name }}.zip .\XSharp\bin\Release\*
        
    - name: Publish
      uses: softprops/action-gh-release@v1
      with:
        files: |
          ${{ release_name }}.zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
